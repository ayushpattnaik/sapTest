javascript:(function(){
    var iframe = document.createElement('iframe');
    iframe.style.position = 'fixed';
    iframe.style.top = '10px';
    iframe.style.right = '10px';
    iframe.style.width = '600px';
    iframe.style.height = '400px';
    iframe.style.border = '2px solid black';
    iframe.style.zIndex = '10000';
    iframe.src = 'https://www.example.com'; // Replace with the URL you want to load
    document.body.appendChild(iframe);
})();

REPORT zdynamic_alv_ida.

TABLES: dd02l.

TYPES: BEGIN OF ty_dd02l,
         tabname TYPE dd02l-tabname,
         as4local TYPE dd02l-as4local,
       END OF ty_dd02l.

DATA: it_dd02l TYPE STANDARD TABLE OF ty_dd02l,
      wa_dd02l TYPE ty_dd02l.

PARAMETERS: p_table TYPE dd02l-tabname OBLIGATORY.

START-OF-SELECTION.
  SELECT tabname, as4local FROM dd02l INTO TABLE it_dd02l
    WHERE tabclass IN ('TRANSP', 'VIEW') AND as4local = 'A'
    ORDER BY tabname.

  LOOP AT it_dd02l INTO wa_dd02l WHERE tabname = p_table.
    EXIT.
  ENDLOOP.

  IF sy-subrc <> 0.
    WRITE: / 'Table or view not found.'.
    EXIT.
  ENDIF.

DATA: lr_data_descr   TYPE REF TO data,
      lr_table_descr  TYPE REF TO cl_abap_tabledescr,
      lr_struct_descr TYPE REF TO cl_abap_structdescr,
      lt_components   TYPE cl_abap_structdescr=>component_table,
      lt_data         TYPE REF TO data.

FIELD-SYMBOLS: <lt_table> TYPE STANDARD TABLE,
               <ls_line>  TYPE any.

" Create dynamic table based on the selected table or view
TRY.
    lr_table_descr ?= cl_abap_tabledescr=>describe_by_name( p_table ).
    CREATE DATA lr_data_descr TYPE HANDLE lr_table_descr.
    ASSIGN lr_data_descr->* TO <lt_table>.
    lr_struct_descr ?= lr_table_descr->get_table_line_type( ).
    lt_components = lr_struct_descr->get_components( ).

    SELECT * FROM (p_table) INTO CORRESPONDING FIELDS OF TABLE <lt_table>.
  CATCH cx_root INTO DATA(lx_exception).
    WRITE: / 'Error accessing table/view: ', lx_exception->get_text( ).
    EXIT.
ENDTRY.

TRY.
    cl_salv_gui_table_ida=>create_for_internal_table(
      importing
        r_salv_gui_table_ida = DATA(lr_alv_ida)
      changing
        t_table             = <lt_table> ).
    lr_alv_ida->display( ).
  CATCH cx_salv_ida_error INTO DATA(lx_ida_error).
    WRITE: / 'Error displaying ALV IDA: ', lx_ida_error->get_text( ).
ENDTRY.
